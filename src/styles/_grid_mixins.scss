@mixin build_media_queries($breakpoint) {
  @if (requires-media-query($breakpoint)) {
    @media (min-width: breakpoint-value($breakpoint)) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin build_grows($breakpoint) {
  @for $grow_level from 1 through $grow_levels {
    .grow_#{$grow_level}#{breakpoint-extension($breakpoint)} {
      flex: #{$grow_level};
    }
  }
}

@mixin build_flex_rows($breakpoint) {
  .flex#{breakpoint-extension($breakpoint)} {
    display: flex;
  }
}

@mixin build_alignments($breakpoint) {
  .space_between#{breakpoint-extension($breakpoint)} {
    justify-content: space-between;
  }

  .space_around#{breakpoint-extension($breakpoint)} {
    justify-content: space-around;
  }

  .align_start#{breakpoint-extension($breakpoint)} {
    justify-content: flex-start;
  }

  .align_end#{breakpoint-extension($breakpoint)} {
    justify-content: flex-end;
  }

  .align_center#{breakpoint-extension($breakpoint)} {
    justify-content: center;
  }
}

@mixin build_shorthands($breakpoint) {
  @for $grow_level from 2 through $grow_levels {
    .#{shorthand-name($grow_level)}#{breakpoint-extension($breakpoint)} {
      display: flex;

      > .flex_item {
        flex-basis: #{percentage(1 / $grow_level)};
      }

      &.gutter > .flex_item {
        flex-basis: calc(#{percentage(1 / $grow_level)} - #{$grid_gutter_x} * 2);
      }
    }
  }
};

@mixin build_shorthand_grows($breakpoint) {
  $extension: breakpoint-extension($breakpoint);
  @for $grow_level from 2 through $grow_levels {
    $shorthand: shorthand-name($grow_level);
    @for $i from 2 through $grow_level {
      [class*='#{$shorthand}'] > .grow_#{$i}#{$extension} {
        flex-basis: calc(#{percentage(1 / $grow_level)} * #{$i});
      }
    }
  }
}

@mixin build_spacing_helpers($grow_level, $breakpoint) {
  $extension: grow-extension($grow_level) + breakpoint-extension($breakpoint);
  @each $margin_key in map-keys($margins) {
    $margin_name: margin-name($margin_key);
    .#{$margin_name}#{$extension} {
      @if $margin_key == 'all' {
        margin: $margin * $grow_level;
      } @elseif $margin_key == 'x' {
        margin-left: $margin * $grow_level;
        margin-right: $margin * $grow_level;
      } @elseif $margin_key == 'y' {
        margin-top: $margin * $grow_level;
        margin-bottom: $margin * $grow_level;
      } @else {
        margin-#{$margin_key}: $margin * $grow_level;
      }
    }
  }

  @each $padding_key in map-keys($paddings) {
    $padding_name: padding-name($padding_key);
    .#{$padding_name}#{$extension} {
      @if $padding_key == 'all' {
        padding: $padding * $grow_level;
      } @elseif $padding_key == 'x' {
        padding-left: $padding * $grow_level;
        padding-right: $padding * $grow_level;
      } @elseif $padding_key == 'y' {
        padding-top: $padding * $grow_level;
        padding-bottom: $padding * $grow_level;
      } @else {
        padding-#{$padding_key}: $padding * $grow_level;
      }
    }
  }
}
